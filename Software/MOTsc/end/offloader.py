Pedge_small_origin = [0,
                0.03674485683441162,
                0.04791293144226074,
                0.03675203323364258,
                0.040089750289916994,
                0.07370176315307617,
                0.07624683380126954,
                0.08291940689086914,
                0.06789031028747558,
                0.07849328517913819,
                0.08658750057220459]
Pedge_large_origin = [0,
                0.030516672134399413,
                0.04421682357788086,
                0.058771920204162595,
                0.06758749485015869,
                0.10979971885681153,
                0.09613885879516601,
                0.11131291389465332,
                0.12303905487060547,
                0.13944225311279296,
                0.16396076679229737,
                0.17964575290679932,
                0.19183120727539063,
                0.21044440269470216,
                0.23102183341979982,
                0.2474213123321533,
                0.2413853168487549,
                0.25800039768218996,
                0.27072255611419677,
                0.2870733022689819]
Pedge_small_trt = [0,
                0.017348051071166992,
                0.02132725715637207,
                0.025477170944213867,
                0.02982044219970703,
                0.03573799133300781,
                0.04348039627075195,
                0.04887795448303223,
                0.05173897743225098,
                0.05814814567565918,
                0.06314992904663086,
                ]
Pedge_large_trt = [0,
                0.021805286407470703,
                0.03145432472229004,
                0.04178166389465332,
                0.04815840721130371,
                0.060439109802246094,
                0.07095122337341309,
                0.08076238632202148,
                0.09012198448181152,
                0.1026468276977539,
                0.1129307746887207,
                0.12241625785827637,
                0.13260197639465332,
                0.14784789085388184,
                0.15217304229736328,
                0.16362214088439941,
                0.1756126880645752,
                0.187727689743042,
                0.19567012786865234,
                0.21185564994812012]
Pend_small = [0,
                0.16158819198608398,
                0.2500980615615845,
                0.34384722709655763,
                0.4195473432540894,
                0.5050799131393433,
                0.5893258571624755,
                0.6794138193130493,
                0.7791926860809326,
                0.8989509820938111,
                0.9711158514022827]
Pend_large = [0,
                0.2511429786682129,
                0.41208434104919434,
                0.5956382751464844,
                0.7438833713531494,
                0.946697473526001,
                1.115140676498413,
                1.2831928730010986,
                1.532360553741455,
                1.7668652534484863,
                1.9226579666137695,
                2.1187639236450195,
                2.3432862758636475,
                2.5301191806793213,
                2.712205410003662,
                2.9083738899230957,
                3.082366466522217,
                3.279342269897461,
                3.4085469007492066,
                3.5975528955459595]

def offload(current_speed, isSmall, is_trt):
    latency_min = 1000
    heights_choice_min = 0
    if is_trt:
        Pedge_large = Pedge_large_trt
        Pedge_small = Pedge_small_trt
    else:
        Pedge_large = Pedge_large_origin
        Pedge_small = Pedge_small_origin
    if isSmall:
        width = 576
        heights = [int(i * 320 / 10) for i in range(10 + 1)]
        for heights_choice in range(10 + 1):
            rend = heights[heights_choice] * width * 3
            redge = heights[10 - heights_choice] * width * 3

            Lend = redge / 9.5 / current_speed
            Pedge = Pedge_small[10 - heights_choice]
            Pend = Pend_small[heights_choice]
            latency = max(Lend+Pedge, Lend+Pend)
            if latency < latency_min:
                latency_min = latency
                heights_choice_min = heights_choice
    else:
        width = 1088
        heights = [int(i * 608 / 19) for i in range(19 + 1)]
        for heights_choice in range(19 + 1):
            rend = heights[heights_choice] * width * 3
            redge = heights[19 - heights_choice] * width * 3

            Lend = redge / 9.5 / current_speed
            Pedge = Pedge_large[19 - heights_choice]
            Pend = Pend_large[heights_choice]
            latency = max(Lend+Pedge, Lend+Pend)
            if latency < latency_min:
                latency_min = latency
                heights_choice_min = heights_choice
    return heights_choice_min